# Generated by Django 5.2.4 on 2025-07-18 13:31

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('recipe_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RecipeGeneration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_dietary_restrictions', models.TextField(blank=True, null=True)),
                ('requested_cuisines', models.TextField(blank=True, null=True)),
                ('requested_ingredients', models.TextField(blank=True, null=True)),
                ('requested_meal_type', models.CharField(blank=True, max_length=20, null=True)),
                ('requested_cooking_time', models.CharField(blank=True, max_length=20, null=True)),
                ('requested_difficulty', models.CharField(blank=True, max_length=20, null=True)),
                ('requested_servings', models.PositiveIntegerField(blank=True, null=True)),
                ('generation_time', models.DecimalField(blank=True, decimal_places=2, help_text='Time in seconds', max_digits=6, null=True)),
                ('ai_model_used', models.CharField(default='gemini-1.5-flash', max_length=100)),
                ('prompt_tokens', models.PositiveIntegerField(blank=True, null=True)),
                ('completion_tokens', models.PositiveIntegerField(blank=True, null=True)),
                ('generation_successful', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecipeRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='recipe',
            options={'ordering': ['-created_at']},
        ),
        migrations.RemoveField(
            model_name='recipe',
            name='cuisine',
        ),
        migrations.AddField(
            model_name='recipe',
            name='allergens',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='calories_per_serving',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='carbs',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Carbs in grams', max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='cook_time',
            field=models.PositiveIntegerField(blank=True, help_text='Cook time in minutes', null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='cooking_time',
            field=models.CharField(blank=True, choices=[('under_15', 'Under 15 min'), ('15_30', '15-30 min'), ('30_60', '30-60 min'), ('60_120', '1-2 hours'), ('over_120', '2+ hours')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='cuisine_type',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='difficulty',
            field=models.CharField(blank=True, choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='fat',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Fat in grams', max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='fiber',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Fiber in grams', max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='is_featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='recipe',
            name='meal_type',
            field=models.CharField(blank=True, choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner'), ('snack', 'Snack'), ('dessert', 'Dessert'), ('appetizer', 'Appetizer')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='prep_time',
            field=models.PositiveIntegerField(blank=True, help_text='Prep time in minutes', null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='protein',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Protein in grams', max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='rating',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='recipe',
            name='rating_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='recipe',
            name='servings',
            field=models.PositiveIntegerField(default=4, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AddField(
            model_name='recipe',
            name='source_ingredients',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='total_time',
            field=models.PositiveIntegerField(blank=True, help_text='Total time in minutes', null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='view_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='dietary_restrictions',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['meal_type'], name='recipe_app__meal_ty_6285e7_idx'),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['cuisine_type'], name='recipe_app__cuisine_d2f191_idx'),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['difficulty'], name='recipe_app__difficu_052fd0_idx'),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['cooking_time'], name='recipe_app__cooking_c5b76b_idx'),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['rating'], name='recipe_app__rating_186f4e_idx'),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['created_at'], name='recipe_app__created_05abb1_idx'),
        ),
        migrations.AddField(
            model_name='recipegeneration',
            name='recipe',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='generation_data', to='recipe_app.recipe'),
        ),
        migrations.AddField(
            model_name='reciperating',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='recipe_app.recipe'),
        ),
        migrations.AlterUniqueTogether(
            name='reciperating',
            unique_together={('recipe', 'user_ip')},
        ),
    ]
